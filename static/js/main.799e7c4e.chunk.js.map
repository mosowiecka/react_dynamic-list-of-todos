{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoInfo","todo","todoFocusedOn","focusOnTodo","id","title","completed","className","type","onClick","TodoList","todos","map","TodoFilter","setActivityFilter","setQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","unFocus","useState","user","setUser","loadingDone","setLoadingDone","useEffect","loadUser","a","userId","Number","data","href","email","name","filterTodos","todosActivityFilter","todosQuery","resultTodos","toLowerCase","filter","includes","App","todoShown","setTodoShown","setTodos","setTodosActivityFilter","setTodosQuery","isLoading","setIsLoading","loadTodos","filterValue","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.799e7c4e.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  todoFocusedOn: Todo | undefined,\n  focusOnTodo: (todo:Todo)=>void,\n};\nexport const TodoInfo: React.FC<Props> = (\n  {\n    todo,\n    todoFocusedOn,\n    focusOnTodo,\n  },\n) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      {completed\n        ? (\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n        ) : (<td className=\"is-vcentered\" />)}\n      <td className=\"is-vcentered is-expanded\">\n        <p className={\n          completed ? 'has-text-success'\n            : 'has-text-danger'\n        }\n        >\n          { title }\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => focusOnTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={todoFocusedOn?.id === todo.id\n              ? 'far fa-eye-slash' : 'far fa-eye'}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  todoFocusedOn: Todo | undefined,\n  focusOnTodo: (todo:Todo)=>void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, todoFocusedOn, focusOnTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos\n        .map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todoFocusedOn={todoFocusedOn}\n            todo={todo}\n            focusOnTodo={focusOnTodo}\n          />\n        ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\nimport { FilterTypes } from '../../types/FilterTypes';\n\ntype Props = {\n  setActivityFilter: (filterValue: FilterTypes) => void;\n  setQuery: (value:string) => void;\n  query: string,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  setActivityFilter,\n  setQuery,\n  query,\n}) => {\n  const handleStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setActivityFilter(event.target.value as FilterTypes);\n  };\n\n  const handleQueryChange: React.ChangeEventHandler<HTMLInputElement>\n  = (event) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          { query\n          && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clearSearchButton\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo | undefined,\n  unFocus: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, unFocus }) => {\n  const [user, setUser] = useState<User>();\n  const [loadingDone, setLoadingDone] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const data = await getUser(Number(todo?.userId));\n\n      setUser(data);\n      setLoadingDone(true);\n    };\n\n    loadUser();\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!loadingDone ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={unFocus}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterTypes } from './types/FilterTypes';\n\nfunction filterTodos(todos: Todo[], todosActivityFilter: FilterTypes, todosQuery: string) {\n  let resultTodos = [...todos];\n  const query = todosQuery.toLowerCase();\n\n  switch (todosActivityFilter) {\n    case 'completed':\n      resultTodos = resultTodos.filter(todo => todo.completed\n      && todo.title.toLowerCase().includes(query));\n      break;\n    case 'active':\n      resultTodos = resultTodos.filter(todo => !todo.completed\n      && todo.title.toLowerCase().includes(query));\n      break;\n    default:\n      resultTodos = resultTodos.filter(todo => todo.title.toLowerCase().includes(query));\n      break;\n  }\n\n  return resultTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todoShown, setTodoShown] = useState<Todo>();\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosActivityFilter, setTodosActivityFilter] = useState<FilterTypes>('All');\n  const [todosQuery, setTodosQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const setActivityFilter = (filterValue: FilterTypes) => {\n    setTodosActivityFilter(filterValue);\n  };\n\n  const setQuery = (value: string) => {\n    setTodosQuery(value);\n  };\n\n  const focusOnTodo = (todo: Todo) => {\n    setTodoShown(todo);\n  };\n\n  const unFocusOnTodo = () => {\n    setTodoShown(undefined);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsLoading(true);\n    };\n\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setActivityFilter={setActivityFilter}\n                setQuery={setQuery}\n                query={todosQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading ? <Loader /> : (\n                <TodoList\n                  todos={filterTodos(todos, todosActivityFilter, todosQuery)}\n                  todoFocusedOn={todoShown}\n                  focusOnTodo={focusOnTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      { todoShown !== undefined && (<TodoModal todo={todoShown} unFocus={unFocusOnTodo} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}